version: '3.8'

services:
  web:
    build: .
    env_file:
      - .env.production
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_volume:/app/staticfiles  # Правильный путь
      - media_volume:/app/media
    command: >
      sh -c "sleep 10 &&
             python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn --bind 0.0.0.0:8000 shop.wsgi:application"

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=27784112
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles  # Тот же путь что и у web
      - media_volume:/app/media
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume:
